/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "EUTRA-RRC-Definitions"
 * 	found in "lte-rrc-14.7.0.asn1"
 * 	`asn1c -gen-PER -fcompound-names -no-gen-example`
 */

#ifndef	_QuantityConfig_H_
#define	_QuantityConfig_H_


#include <asn_application.h>

/* Including external dependencies */
#include <constr_SEQUENCE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Forward declarations */
struct QuantityConfigEUTRA;
struct QuantityConfigUTRA;
struct QuantityConfigGERAN;
struct QuantityConfigCDMA2000;
struct QuantityConfigUTRA_v1020;
struct QuantityConfigEUTRA_v1250;
struct QuantityConfigEUTRA_v1310;
struct QuantityConfigWLAN_r13;

/* QuantityConfig */
typedef struct QuantityConfig {
	struct QuantityConfigEUTRA	*quantityConfigEUTRA	/* OPTIONAL */;
	struct QuantityConfigUTRA	*quantityConfigUTRA	/* OPTIONAL */;
	struct QuantityConfigGERAN	*quantityConfigGERAN	/* OPTIONAL */;
	struct QuantityConfigCDMA2000	*quantityConfigCDMA2000	/* OPTIONAL */;
	/*
	 * This type is extensible,
	 * possible extensions are below.
	 */
	struct QuantityConfigUTRA_v1020	*quantityConfigUTRA_v1020	/* OPTIONAL */;
	struct QuantityConfigEUTRA_v1250	*quantityConfigEUTRA_v1250	/* OPTIONAL */;
	struct QuantityConfigEUTRA_v1310	*quantityConfigEUTRA_v1310	/* OPTIONAL */;
	struct QuantityConfigWLAN_r13	*quantityConfigWLAN_r13	/* OPTIONAL */;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} QuantityConfig_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_QuantityConfig;
extern asn_SEQUENCE_specifics_t asn_SPC_QuantityConfig_specs_1;
extern asn_TYPE_member_t asn_MBR_QuantityConfig_1[8];

#ifdef __cplusplus
}
#endif

/* Referred external types */
#include "QuantityConfigEUTRA.h"
#include "QuantityConfigUTRA.h"
#include "QuantityConfigGERAN.h"
#include "QuantityConfigCDMA2000.h"
#include "QuantityConfigUTRA-v1020.h"
#include "QuantityConfigEUTRA-v1250.h"
#include "QuantityConfigEUTRA-v1310.h"
#include "QuantityConfigWLAN-r13.h"

#endif	/* _QuantityConfig_H_ */
#include <asn_internal.h>
